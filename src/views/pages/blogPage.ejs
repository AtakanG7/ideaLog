<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="<%= JSON.stringify(data.description) %>">
    <meta name="keywords" content="<%= JSON.stringify(data.search_keywords) %> Atakan Gül">
    <meta name="author" content="<%= JSON.stringify(data.authorMetadata.name || data.authorMetadata.email) %>">
    <meta property="og:title" content="<%= JSON.stringify(data.title) %> | Atakan Gül | Latest Tech Articles and Insights">
    <meta property="og:description" content="<%= JSON.stringify(data.description) %>">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.atakangul.com/">
    <meta property="og:image" content="<%= JSON.stringify(data.imageURL) || 'https://www.atakangul.com/img/favicon.ico'%>">
    <meta property="og:locale" content="en_US">
    <meta property="og:site_name" content="Atakan Gül's Technology Blog">
    <title><%= JSON.stringify(data.title + ' | Atakan Gül Blog | Technology Insights') %></title>
    <link rel="canonical" href="<%= JSON.stringify(data.url) %>">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/customcss.css">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/img/favicon.ico">
    <link rel="icon" type="image/png" sizes="16x16" href="/img/favicon.ico">
    <link rel="manifest" href="/site.webmanifest">
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Blog",
        "name": "Atakan Gül's Technology Blog",
        "description": "Explore the latest technology articles and insights on Atakan Gül's blog.",
        "url": "https://www.atakangul.com/",
        "author": {
          "@type": "Person",
          "name": "Atakan Gül"
        }
      }
    </script>
  </head>
<body>
  <% if (isAdmin) { %>  
    <%- include('../partials/headers/headerAdmin.ejs') %>
  <% } else if (isAuthenticated) { %>
    <%- include('../partials/headers/headerAuth.ejs') %>
  <% } else { %>
    <%- include('../partials/headers/headerUnAuth.ejs') %>
  <% } %>

  <div class="container-fluid" style="max-width: 680px; word-break: break-all; line-height: 40px;">
    <div class="flex w-100">
      <button class="btn btn-ghost btn-outline text-base-content normal-case text-xl flex ms-auto px-10 py-0 m-1" style="width: fit-content;" onclick="window.location.href='/'">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left">
          <line x1="19" y1="12" x2="5" y2="12"></line>
          <polyline points="12 19 5 12 12 5"></polyline>
        </svg>
      </button>
    </div>
    <div class="row mt-3">
      <h1 class="article-title "><%= data.title %></h1>
      <% if (data.description.length > 200) { %>
        <h2 class="article-subtitle"><%= data.description.slice(0, 200)%> <span role="button" class="font-semibold text-dark-800 bg-dark-100 rounded-full dark:text-dark-400">continue reading...</span></h2>
      <% } else { %>
        <h2 class="article-subtitle"><%= data.description %></h2>
      <% } %>
      <div class="flex items-center space-x-4 mt-4">
        <div class="avatar rounded-full overflow-hidden" style="width: 40px; height: 40px;">
          <img src="<%= data.authorMetadata.avatarURL || '/img/user.png' %>" alt="Avatar" class="w-full h-full object-cover">
        </div>
        <div class="flex-grow">
          <div class="flex items-center">
            <h2 class="font-bold text-lg author-font mr-2"><%= data.authorMetadata.name || data.authorMetadata.email %></h2>
            <% if (data.authorMetadata.isVerified) { %>
              <span class="inline-flex items-center justify-center w-5 h-5 text-sm font-semibold text-dark-800 bg-dark-100 rounded-full dark:text-dark-400" title="Verified">
                <svg class="w-2.5 h-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/>
                </svg>
              </span>
            <% } %>
          </div>
          <div class="flex items-center">
            <small class="text-gray-500"><%= new Date(data.createdAt).toLocaleDateString("en-US", {
              month: 'short', day: 'numeric', year: 'numeric'
            }) %></small>
          </div>
        </div>
        <div class="sharethis-inline-share-buttons"></div>
      </div>
      <div class="divider p-0 mb-1 px-4" ></div>

      <% const contents = JSON.parse(data.content); %>
      
      <% if(data.AICreated) { %>
        <% for (const [key, value] of Object.entries(contents)) { %>
          <div class="mb-8 px-2 article-content-container" id="<%= value.title %>">
            <img src="<%= value.image_url || '' %>" id="post-<%= key %>" class="rounded-t-lg w-100 mb-5 p-2 skeleton" alt="<%= value.title %>" />
            <h1 class="text-2xl font-bold mb-2"><%= value.title %></h1>
            <div class="mb-4 text-lg" style="font: 300; font-size: 20px; line-height: 35px;">
              <%- value.content %>
            </div>
          </div>
        <% } %>
      <% } else { %>
        <% for (const [key, value] of Object.entries(contents)) { %>
          <div class="mb-8 px-2 article-content-container" id="<%= value.title %>">
            <h1 id="post-title" class="mb-4" style="font: 300; font-size: 35px; line-height: 35px;">
              <%= value.title %>
            </h1>
            <div id="post-content" class="mb-4 custom-font" style="font-size: 24px; line-height: 35px;">
              <%- value.content %>
            </div>
          </div>
        <% } %>
      <% } %>

      <div class="card bg-bfase-100 shadow-xl mt-5">
        <div class="card-body m-1 p-1">

          <div class="container px-1 pt-5">
            <h1 class="text-2xl"><%= data.title %></h1> 
            <div class="mb-0">
              <small>Published at <strong><%= new Date(data.createdAt).toLocaleDateString("en-US", {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
              }) %></strong></small>
            </div>
            <div class="mt-3">
              <% data.search_keywords.split(",").slice(0,7).forEach((key) => { %>
                <% if (!(key.length > 50)) { %>
                  <a href="/blogs/search?q=<%= encodeURIComponent(key) %>" class="ui tag label"><%= key %></a>
                <% } %>
              <% }); %>
            </div>
            <div class="flex items-center space-x-4 mt-5">
              <div class="avatar rounded-full overflow-hidden" style="width: 50px; height: 50px;">
                <img src="<%= data.authorMetadata.avatarURL ? data.authorMetadata.avatarURL : '/img/user.png' %>" alt="Avatar" class="w-full h-full object-cover">
              </div>
              <div>
                <div class="flex gap-2 justify-center align-center">
                  <h2 class="font-bold text-lg"><%= data.authorMetadata.name || data.authorMetadata.email %></h2>
                  <% if (data.authorMetadata.isVerified) { %>
                    <span class="inline-flex items-center justify-center w-5 h-5 me-3 text-sm font-semibold text-dark-800 bg-dark-100 rounded-full dark:text-dark-400" title="Verified">
                      <svg class="w-2.5 h-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/>
                      </svg>
                    </span>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
      
          <div class="flex items-center justify-center gap-3">
            <div class="flex items-center">
              <button onclick="likePost()" class="btn btn-ghost btn-circle" title="Clap count">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.823 19.773c.843-.843.945-2.308.24-3.268a3.51 3.51 0 00-4.943-.736L6 16.89V19.5l5.323-1.727zM12.177 4.227c-.843.843-.945 2.308-.24 3.268a3.51 3.51 0 004.943.736L18 7.11V4.5l-5.323 1.727z" />
                </svg>
              </button>
              <span class="ml-2 clap"><%= data.likes %></span>
            </div>
            <div class="flex items-center">
              <button class="btn btn-ghost btn-circle" title="Comment count">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                </svg>
              </button>
              <span class="ml-2"><%= data.comments.length %></span>
            </div>
            <div class="flex items-center" title="View count">
              <button class="btn btn-ghost btn-circle">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                </svg>
              </button>
              <span class="ml-2"><%= data.views %></span>
            </div>
          </div>

          <div class="mt-4">
            <textarea class="textarea textarea-bordered w-full" placeholder="Leave a comment"></textarea>
            <button onclick="postComment()" class="btn btn-ghost mt-2">Post Comment</button>
          </div>

          <div class="mt-4 px-2">
            <h3 class="text-lg font-bold">Comments</h3>
            <div class="mt-2" id="comments-container">
              <% if (comments.length > 0) { %>
                <% comments.forEach(comment => { %>
                  <div class="w-full">
                    <div class="grid comment">
                      <div class="flex gap-2.5 mb-4">
                        <img src="/img/avatar.webp" alt="User image" class="w-11 h-11 rounded-full">
                        <div class="grid w-100">
                          <h5 class="text-gray-900 text-sm font-semibold leading-snug pb-1"><%= comment.authorName %></h5>
                          <div class="w-max grid w-100">
                            <div class="px-3.5 py-2 bg-gray-100 rounded-3xl rounded-tl-none justify-start w-100 items-center gap-3 inline-flex">
                              <h5 class="text-gray-900 text-sm font-normal leading-snug"><%= comment.content %></h5>
                            </div>
                            <div class="justify-end items-center inline-flex mb-2.5">
                              <div class="flex gap-2"><%= comment.likes %></div>
                              <h6 class="text-gray-500 text-xs font-normal leading-4 py-1">
                                <small>Published at <strong><%= new Date(comment.createdAt).toLocaleDateString("en-US", {
                                  month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric'
                                }) %></strong></small>
                              </h6>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }) %>
              <% } else { %>
                <div class="flex justify-center items-center py-4">
                  <i class="bi bi-chat-text-right-fill text-gray-500 mr-2"></i>
                  <p class="text-gray-500">No comments yet.</p>
                </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>

      <%- include('../partials/recommendedBlogs.ejs', { recommendations: recommendations }) %>
    </div>
  </div>

  <div class="toast fixed bottom-0 left-0" id="notification" style="margin: 20px;">
    <div class="alert alert-info">
      <span id="notification-message"></span>
    </div>
  </div>

  <script>
    
    let isShowingAll = false;
    
    function toggleContent() {    
      const subtitle = document.querySelector('.article-subtitle');
      if (!isShowingAll) {
        subtitle.textContent = <%- JSON.stringify(data.description) %>;
      } else {
        const description = <%- JSON.stringify(data.description) %>;
        const slice = description.slice(0, 200);
        const continueReading = document.createElement('span');
        continueReading.role = 'button';
        continueReading.classList.add('font-semibold', 'text-dark-800', 'bg-dark-100', 'rounded-full', 'dark:text-dark-400');
        continueReading.textContent = ' continue reading...';
        subtitle.innerHTML = slice + ' ';
        subtitle.appendChild(continueReading);
      }
      isShowingAll = !isShowingAll;
    }

    document.querySelector('.article-subtitle').addEventListener('click', toggleContent);

    function likePost() {
        fetch('/blogs/like', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ _id: '<%= data._id %>' })
        })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            document.querySelector('.clap').textContent = Number(document.querySelector('.clap').textContent) + 1;
          }
        })
      }

    async function postComment() {
      const comment = document.querySelector('.textarea').value.trim();
      if (!comment) {
        showNotification("Comment cannot be empty!");
        return;
      }

      try {
        const response = await fetch('/blogs/comments/', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            content: comment,
            author: '<%= data.authorMetadata._id %>',
            post: '<%= data._id %>'
          })
        });

        if (response.redirected) {
          showNotification("Please login to comment!");
          return;
        }

        const data = await response.json();
        if (data) {
          showNotification("Your message is under review! After review, it will be published.");
          addCommentToDOM(data.comment);
          document.querySelector('.textarea').value = '';
        }
      } catch (error) {
        showNotification("Failed to upload comment. Please try again.");
      }
    }

    function showNotification(message) {
      document.getElementById('notification-message').textContent = message;
      notification.style.display = 'block';
      setTimeout(() => notification.style.display = 'none', 5000);
    }
    
    function addCommentToDOM(comment) {
      const commentBox = document.getElementById('comments-container');
      const commentHTML = `
        <div class="w-full">
          <div class="grid comment">
            <div class="flex gap-2.5 mb-4">
              <img src="/img/avatar.webp" alt="User avatar" class="w-10 h-11">
              <div class="grid w-100">
                <h5 class="text-gray-900 text-sm font-semibold leading-snug pb-1">${comment.authorName}</h5>
                <div class="w-max grid w-100">
                  <div class="px-3.5 py-2 bg-gray-100 rounded-3xl rounded-tl-none justify-start w-100 items-center gap-3 inline-flex">
                    <h5 class="text-gray-900 text-sm font-normal leading-snug">${comment.content}</h5>
                  </div>
                  <div class="justify-end items-center inline-flex mb-2.5">
                    <div class="flex gap-2"></div>
                    <h6 class="text-gray-500 text-xs font-normal leading-4 py-1">
                      <small>Published at <strong>${new Date().toLocaleDateString("en-US", {
                        month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric'
                      })}</strong></small>
                    </h6>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      `;
      commentBox.insertAdjacentHTML('beforeend', commentHTML);
      
      const noComments = document.getElementById('no-comments');
      if (noComments) noComments.style.display = 'none';
    }
  
    function stripHtml(html) {
      const temporalDiv = document.createElement("div");
      temporalDiv.innerHTML = html;
      return temporalDiv.textContent || temporalDiv.innerText || "";
    }

    async function fetchImage(query, postContainerId) {
      const apiKey = "34782797-09ed0e53aefea1bdbbcccd6f0";
      const url = `https://pixabay.com/api/?key=${apiKey}&q=${encodeURIComponent(query.toLowerCase())}&image_type=photo&per_page=10&w=800&h=400`;
      try {
        const response = await fetch(url);
        const data = await response.json();
        if (data.hits && data.hits.length > 0) {
          document.getElementById(`${postContainerId}`).src = data.hits[0].webformatURL;
        }
      } catch (error) {
        
      }
    }
    async function loadImages() {
      if(!<%- JSON.stringify(data.AICreated) %>){
        return;
      }
      const contents = <%- JSON.stringify(contents) %>;
     
      for (const [key, value] of Object.entries(contents)) {
        await fetchImage(stripHtml(value.one_keyword), `post-${key}`);
      }
    }
    
    loadImages();

    const scrollToElement = () => {
      const element = document.querySelector('#scroll-place');
      if (element) element.scrollIntoView({ behavior: 'smooth' });
    };
  
  </script>
</body>
</html>