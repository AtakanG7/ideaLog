<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
  <meta charset="UTF-8">
  <title>Blog Post Creation</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style.css" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    #editor {
      width: 100%;
      overflow: hidden;
      font-size: 20px;
      min-height: 100vh !important;
      height: auto !important;
      margin: 0 auto;
    }

    .ql-editor {
     font-size: 20px;
    }

    @media only screen and (max-width: 600px) {
      #editor {
        width: 100% !important;
        overflow: hidden;
        font-size: 20px;
        min-height: 100vh !important;
        height: auto !important;
        margin: 0 auto;
      }
    }

  </style>
  <link href="https://cdn.jsdelivr.net/npm/quill@2/dist/quill.snow.css" rel="stylesheet"/>
</head>
<body>
    <% if (isAdmin) { %>  
      <%- include('../partials/headers/headerAdmin.ejs') %>
    <% } else if (isAuthenticated) { %>
      <%- include('../partials/headers/headerAuth.ejs') %>
    <% } else { %>
      <%- include('../partials/headers/headerUnAuth.ejs') %>
    <% } %>
    <div class="mt-3"></div>
    <!-- Create the editor container -->
     <div class="col-span-12 sm:col-span-6 md:col-span-4 lg:col-span-3 xl:col-span-2">
       
        <div class="w-50 editor" id="editor"></div>
     </div>
    <div class="container w-full p-0" style="width: 600px;">
      <button class="btn flex ms-auto m-4" onclick="my_modal_3.showModal()">Go on</button>
    </div>
    <% include('../partials/blogPostModal.ejs') %>
    
    <!-- Include the Quill library -->
    <script src="https://cdn.jsdelivr.net/npm/quill@2/dist/quill.js"></script>

    <!-- Initialize Quill editor -->
    <script>
        
      const input = document.createElement('input');
      const span = document.createElement('span');
      const image_uploader = document.getElementById('image-upload');

      document.addEventListener('DOMContentLoaded', () => {
        // function to load the editor content from the localhost
        const savedContent = localStorage.getItem('editorContent');
        console.log(savedContent)
        if (savedContent) {
          quill.clipboard.dangerouslyPasteHTML(savedContent);
        }
        
      });

      const imageHandler = async () => {
        input.type = 'file';
        input.accept = 'image/*';
        input.click();
        input.onchange = async () => {
          if (input.files.length > 0) {
            const formData = new FormData();
            formData.append('image', input.files[0]);

            const response = await fetch('/images/upload', {
              method: 'POST',
              body: formData
            });

            const result = await response.json();
            console.log(result)
            if (result.url) {
              const imageUrl = result.url;
              var range = quill.getSelection();
              console.log(range.index)
              if(range){
                quill.insertEmbed(range.index, 'image', imageUrl, Quill.sources.USER);
              }
            }
          }
        };
      };

      const imageUpload = document.getElementById('image-upload');
      const toolbarOptions = [
          ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
          ['blockquote', 'code-block'],
          ['link', 'image', 'formula'],

          [{ 'header': 1 }, { 'header': 2 }],               // custom button values
          [{ 'list': 'ordered'}, { 'list': 'bullet' }, { 'list': 'check' }],
          [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
          [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
          [{ 'direction': 'rtl' }],                         // text direction

          [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
          [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

          ['clean']                                         // remove formatting button
        ];

      const quill = new Quill('#editor', {
        modules: {
            toolbar: {
                container: toolbarOptions,
                handlers: {
                    image: imageHandler
                }
            }
        },
        theme: 'snow'
      });

      function getEditorContent() {
        return quill.root.innerHTML;
      }


      async function sendEditorContent() {
        const content = getEditorContent();
        
        if(content.trim() === '<p><br></p>') {
          alert('Please write something before sending it!');
          return
        }
        const data = {
          content: content
        };

        const loadingSection = document.getElementById('loadingSection');
        const doneSection = document.getElementById('doneSection');

        try {
          loadingSection.style.display = 'flex';

          const response = await fetch('/blogs', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          });

          if (response.ok) {
            console.log('Content sent successfully');
            doneSection.style.display = 'flex';
            setTimeout(() => {
              redirect('/blogs');
            }, 1000); // Redirect after 1 second
          } else {
            console.error('Failed to send content');
          }
        } catch (error) {
          console.error('Error:', error);
        } finally {
          loadingSection.style.display = 'none';
        }
      }

      function saveEditorContent() {
        localStorage.setItem('editorContent', getEditorContent());
      }

      // function to save the editor content every 5 second to the localhost
      setInterval(saveEditorContent, 5000);
      

    </script>
</body>
</html>
