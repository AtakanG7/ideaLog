<!DOCTYPE html>
<html lang="en">
  <head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/customcss.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Tiny5&family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search results for <%= q %> | Atakan GÃ¼l Blog Page | Read Technology Articles </title>
  </head>
  <style>
    
    .ubuntu-light {
        font-family: "Ubuntu", sans-serif;
        font-weight: 300;
        font-style: normal;
    }

    .profile-img-custom{
      width: 150px;
      height: 150px;
      border-radius: 50%;
      border: solid;
      border-color: black;
      border-width: 2px;
      left: 50%;
      transform: translateX(-50%);
      bottom: -6rem !important;
      position: absolute;
      z-index: 99 !important;
    }

    @media only screen and (max-width: 786px) {
      .profile-img-custom{
          width: 120px !important;
          height: 120px !important; 
          bottom: -5rem !important;
      }

      .before::before{
        content: "";
        position: relative;
        display: flex;
        width: 100%;
        height: 70px !important;
      }

      .profile-banner-mobile{
        height: 120px !important;
      }
    }
    @media only screen and (min-width: 1024px) {
      .profile-img-custom{
          width: 140px;
          height: 140px;
      }
    }

    .profile-banner-mobile{
        height: 200px;
    }

    .before::before{
      content: "";
      position: relative;
      display: flex;
      width: 100%;
      height: 85px;
    }

    .form-custom:active{
      border-color: #FFD700;
    }
  </style>
  <body>

      <% if (isAdmin) { %>  
        <%- include('../partials/headers/headerAdmin.ejs') %>
      <% } else if (isAuthenticated) { %>
        <%- include('../partials/headers/headerAuth.ejs') %>
      <% } else { %>
        <%- include('../partials/headers/headerUnAuth.ejs') %>
      <% } %>


      <div class="ui container" style="max-width: 1054px !important; min-height: 60vh;">
        <div class="flex w-100">
            <span class="btn btn-ghost btn-outline text-base-content normal-case text-xl flex ms-auto px-10 py-0" style="width: fit-content;">
                <a href="/"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg></a>
            </span>
        </div>
        <div class="ui container w-100 my-5 ml-0 px-0" id="scroll-place">
          <article class="prose  m-0">
            <h2 class="custom-font py-2 flex justify-start rounded-lg" style="width: fit-content;">
              <span class="text-base-content font-semibold">Search results for <span style="color: #394ab6;"><%= q %></span></span>
              <span class="text-base-content font-medium tracking-wide">&nbsp; (<%= data.length %>)</span>
            </h2>
          </article>
        </div>
        <div class="ui divided items gap-3">
          <% data.forEach(post => { %>
            <div class="item">
              <div class="ui tiny image rounded" style="min-width: 160px !important; object-fit: cover;">
                <img class="rounded" style="border-radius: 10px; object-fit: cover; max-height: 120px !important;" src="<%= post.imageURL %>" alt="<%= post.title %>" loading="lazy">
              </div>
              <div class="content">
                <a href="/blogs/<%= post.url %>" class="header"><%= post.title %></a>
                <div class="meta">
                  <span class="author">
                    <i class="user icon"></i>
                    <%- post.authorMetadata ? (post.authorMetadata.name === "AItakan" ? 'AI Created' : post.authorMetadata.name || post.authorMetadata.email ) : 'Unknown' %>
                  </span>
                  <span class="date">
                    <i class="calendar icon"></i>
                    <%= new Date(post.createdAt).toLocaleDateString("en-US", { year: 'numeric', month: 'short', day: 'numeric' }) %>
                  </span>
                  <span class="comments">
                    <i class="comment icon"></i>
                    <%= post.comments.length %> Comments
                  </span>
                  <div class="flex ms-auto sharethis-inline-share-buttons"></div>
                </div>
              </div>
            </div>
          <% }) %>
        </div>

      </div>
      
      <div class="ui container" style="max-width: 1054px !important;">
        <%- include('../partials/recommendedBlogs.ejs') %>
      </div>

      <script>
        async function fetchImage(query, postContainerId) {
          const url = `https://pixabay.com/api/?key=34782797-09ed0e53aefea1bdbbcccd6f0&q=${query.toLowerCase()}&image_type=photo&editors_choice=true`;

          try {
            const response = await fetch(url);
            const data = await response.json();

            if (data.hits && data.hits.length > 0) {
              const imageUrl = data.hits[1].webformatURL;
              document.querySelector(`#${postContainerId}`).src = imageUrl;
            } else {
              console.error("No images found.");
            }
          } catch (error) {
            console.error("Error fetching image:", error);
          }
        }
        async function loadImages() {
          const data = <%- JSON.stringify(data) %>;
          for (const post of data) {
            const keywords = post.search_keywords.split(' ')[0] + ' ' + post.search_keywords.split(' ')[1];
            await fetchImage(keywords, `post-${post._id}`);
          }
        }

        window.onload = () => {
          loadImages();
        };
        
        scrollToElement = () => {
          const element = document.querySelector('#scroll-place');
          if (element) {
            element.scrollIntoView({ behavior: 'smooth' });
          }
        };

      </script>
      
  </body>
</html>
