<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Post Editor</title>
    <style>
        #content {
            width: 100%;
            height: 200px;
        }
        .image-preview {
            max-width: 100%;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Write a Blog Post</h1>
    <form id="blog-post-form">
        <textarea id="content" rows="10" cols="50" placeholder="Write your blog post here..."></textarea>
        <br>
        <input type="file" id="image-upload">
        <div id="image-preview"></div>
        <button type="submit">Submit</button>
    </form>

    <script>
        const form = document.getElementById('blog-post-form');
        const imageUpload = document.getElementById('image-upload');
        const imagePreview = document.getElementById('image-preview');
        const content = document.getElementById('content');

        // Add event listener to ctrl + c for image pasting
        document.addEventListener('paste', async (event) => {
            const items = (event.clipboardData || event.originalEvent.clipboardData).items;
            for (const item of items) {
                if (item.type.indexOf('image') !== -1) {
                    event.preventDefault();
                    const blob = await new Promise((resolve) => {
                        const reader = new FileReader();
                        reader.onloadend = () => resolve(reader.result);
                        reader.readAsDataURL(item.getAsFile());
                    });
                    const formData = new FormData();
                    formData.append('image', blob);

                    const response = await fetch('/images/upload/', {
                        method: 'POST',
                        body: formData
                    });
                    const { imageURL } = await response.json();
                    content.value += `\n![](${imageURL})`;
                }
            }
        });

        console.log('Adding image upload listener');
        imageUpload.addEventListener('change', async () => {
            console.log('Image upload triggered');
            if (imageUpload.files.length > 0) {
                const formData = new FormData();
                formData.append('image', imageUpload.files[0]);

                const response = await fetch('/images/upload', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                console.log(result)
                if (result.url) {
                    const imageUrl = result.url;
                    // Add image preview
                    const img = document.createElement('img');
                    img.src = imageUrl;
                    
                    imagePreview.append(img);

                    // Insert image URL into content
                    content.value += `\n<img src="${imageUrl}" alt="Uploaded Image">\n`;
                    console.log('Image URL inserted into content');
                }
            }
            console.log('Image upload completed');
        });

        console.log('Adding form submit listener');
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            console.log('Form submit triggered');
            // Here you would save the blog post content to your database
            console.log('Blog Post Content:', content.value);
            console.log('Form submit completed');
        });
    </script>
</body>
</html>
